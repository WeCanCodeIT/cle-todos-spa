// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using todos;

namespace todos.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20210721142355_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("todos.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "carlos@wecancodeit.org",
                            Name = "Carlos"
                        },
                        new
                        {
                            Id = 2,
                            Email = "davis@wecancodeit.org",
                            Name = "Davis"
                        });
                });

            modelBuilder.Entity("todos.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueBy")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Sample todo item 1",
                            CreatedOn = new DateTime(2021, 7, 21, 10, 23, 54, 969, DateTimeKind.Local).AddTicks(8181),
                            DueBy = new DateTime(2021, 7, 26, 10, 23, 54, 973, DateTimeKind.Local).AddTicks(1390),
                            IsDone = false,
                            Name = "Test Todo 1",
                            OwnerId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Sample todo item 2",
                            CreatedOn = new DateTime(2021, 7, 21, 10, 23, 54, 973, DateTimeKind.Local).AddTicks(2737),
                            DueBy = new DateTime(2021, 7, 26, 10, 23, 54, 973, DateTimeKind.Local).AddTicks(2766),
                            IsDone = false,
                            Name = "Test Todo 2",
                            OwnerId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "Sample todo item 3",
                            CreatedOn = new DateTime(2021, 7, 21, 10, 23, 54, 973, DateTimeKind.Local).AddTicks(2791),
                            DueBy = new DateTime(2021, 7, 26, 10, 23, 54, 973, DateTimeKind.Local).AddTicks(2796),
                            IsDone = false,
                            Name = "Test Todo 3",
                            OwnerId = 1
                        });
                });

            modelBuilder.Entity("todos.Models.Todo", b =>
                {
                    b.HasOne("todos.Models.Owner", "Owner")
                        .WithMany("Todos")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("todos.Models.Owner", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
